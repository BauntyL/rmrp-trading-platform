Промт для создания русскоязычного автомобильного каталога "АвтоКаталог"
Разработайте полноценный русскоязычный автомобильный каталог с следующими характеристиками:

Технический стек
Frontend: React с TypeScript, стилизация с помощью Tailwind CSS и shadcn/ui
Backend: Express.js с TypeScript
Хранение данных: надежная файловая система с автоматическим сохранением при изменениях
Аутентификация: собственная система на основе сессий Express с использованием Passport.js
Структура данных
Пользователи (users):

Поля: id, username, passwordHash, role ("user", "moderator", "admin")
Функции: регистрация, авторизация, изменение роли администратором
Автомобили (cars):

Поля: id, name, imageUrl, price, maxSpeed, acceleration, drive, category, server, serverId, phone, telegram, discord, description, isPremium, status, createdBy, createdAt
Категории: standard, sport, coupe, suv, motorcycle
Серверы: arbat, patriki, rublevka, tverskoy
Заявки на модерацию (carApplications):

Содержат все поля автомобилей + статус (pending, approved, rejected)
Поля reviewer и reviewedBy для отслеживания модерации
Избранное (favorites):

Связь пользователя с автомобилем (userId, carId)
Система хранения
Создать файловую систему хранения (MemStorage), которая:

Держит данные в памяти в Map-структурах (users, cars, carApplications, favorites)
Автоматически сохраняет все данные в JSON-файлы при любых изменениях
При старте приложения загружает данные из файлов обратно в память
Имеет счетчики ID для каждого типа объектов
Включает вызов метода saveData() после каждого изменения в хранилище
Поддерживает фильтрацию по категории, серверу и поисковому запросу
Функциональность пользовательских ролей
Обычный пользователь:

Просмотр автомобилей в каталоге
Подача заявок на добавление автомобиля (модерация)
Управление избранным (добавление/удаление)
Просмотр своих автомобилей и заявок
Модератор:

Все возможности обычного пользователя
Проверка и одобрение/отклонение заявок
Администратор:

Все возможности модератора
Управление ролями пользователей
Просмотр и управление всеми данными
Интерфейс
Темная тема по умолчанию с возможностью переключения
Боковое меню с разделами и информацией о пользователе
Карточки автомобилей с основной информацией и кнопками действий
Модальные окна для подробной информации и форм редактирования
Русскоязычный интерфейс с понятными подсказками
Процесс работы
Пользователь создает заявку на добавление автомобиля
Заявка попадает в раздел модерации
Модератор/админ одобряет или отклоняет заявку
При одобрении автомобиль появляется в общем каталоге
Безопасность
Хеширование паролей с использованием bcrypt
Проверки прав доступа для каждого API-запроса
Валидация входных данных с использованием Zod
Особые требования
Предзагрузка тестовых данных при первой инициализации
Автоматическое сохранение всех изменений (saveData) в файловой системе
Реализация надежного механизма работы даже при отсутствии PostgreSQL
Учетные данные администратора по умолчанию: 477-554 / lql477kqkvb55vp